<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'command_bus' shared service.

$this->services['command_bus'] = $instance = new \SimpleBus\SymfonyBridge\Bus\CommandBus();

$instance->appendMiddleware(new \SimpleBus\Message\Bus\Middleware\FinishesHandlingMessageBeforeHandlingNext());
$instance->appendMiddleware(new \SimpleBus\Message\Recorder\HandlesRecordedMessagesMiddleware(new \SimpleBus\Message\Recorder\AggregatesRecordedMessages(array(0 => new \SimpleBus\Message\Recorder\PublicMessageRecorder())), ($this->services['event_bus'] ?? $this->load('getEventBusService.php'))));
$instance->appendMiddleware(new \SimpleBus\Message\Handler\DelegatesToMessageHandlerMiddleware(new \SimpleBus\Message\Handler\Resolver\NameBasedMessageHandlerResolver(new \SimpleBus\Message\Name\ClassBasedNameResolver(), new \SimpleBus\Message\CallableResolver\CallableMap(array('App\\Activities\\Activity\\Application\\Create\\CreateActivityCommand' => 'App\\Activities\\Activity\\Application\\Create\\CreateActivityHandler'), new \SimpleBus\Message\CallableResolver\ServiceLocatorAwareCallableResolver(array(0 => new \Symfony\Component\DependencyInjection\ServiceLocator(array('App\\Activities\\Activity\\Application\\Create\\CreateActivityHandler' => function () {
    return ($this->privates['App\Activities\Activity\Application\Create\CreateActivityHandler'] ?? $this->load('getCreateActivityHandlerService.php'));
})), 1 => 'get'))))));

return $instance;
